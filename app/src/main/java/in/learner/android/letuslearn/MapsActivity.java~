package in.learner.android.letuslearn;

import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.support.v4.app.FragmentActivity;
import android.os.Bundle;
import android.util.Log;
import android.widget.Toast;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {

    private GoogleMap mMap;
    JSONArray l,j;
    final String url="http://172.16.10.111/get.php";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);
        // Obtain the192.168.43.230 SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);
        new LoginUser().execute();

      /*  mMap.addMarker(new MarkerOptions()
                .position(new LatLng(lat, lang))
                .title(bus.getText().toString())
                .snippet(time));
        LatLng b = new LatLng(lat, lang);
        mMap.moveCamera(CameraUpdateFactory.newLatLng(b));*/

    }


    /**
     * Manipulates the map once available.
     * This callback is triggered when the map is ready to be used.
     * This is where we can add markers or lines, add listeners or move the camera. In this case,
     * we just add a marker near Sydney, Australia.
     * If Google Play services is not installed on the device, the user will be prompted to install
     * it inside the SupportMapFragment. This method will only be triggered once the user has
     * installed Google Play services and returned to the app.
     */
    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;

        // Add a marker in Sydney and move the camera
        LatLng sydney = new LatLng(-34, 151);
        sydney = new LatLng(13, 80);
        mMap.addMarker(new MarkerOptions().position(sydney).title("lah"));
       sydney = new LatLng(14  , 80);

        mMap.addMarker(new MarkerOptions().position(sydney).title("lol"));
        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
    }




    private class LoginUser extends AsyncTask<String,String,Boolean>
    {
        private ProgressDialog nDialog;
        //EditText temp;

        @Override
        protected void onPreExecute(){
            super.onPreExecute();
            nDialog = new ProgressDialog(MapsActivity.this);
            nDialog.setTitle("Logging in ...");
            nDialog.setMessage("Please Wait..");
            nDialog.setIndeterminate(false);
            nDialog.setCancelable(true);
            nDialog.show();
        }

        @Override
        protected Boolean doInBackground(String... args){


            JSONObject jsonobject;
            final JSONParser jParser2 = new JSONParser();
            List<NameValuePair> params2 = new ArrayList<NameValuePair>();
            params2.add(new BasicNameValuePair("id","2"));



            jsonobject = jParser2.makeHttpRequest(url, "GET", params2);

            try{

                String message = jsonobject.getString("success").toString();
                if( !(new String(message).equals("0"))){

                        l=jsonobject.getJSONArray("learn");
                         j=jsonobject.getJSONArray("teach");

                    return true;
                }

            }catch (Exception e){
                Log.e("Error", e.getMessage());
                e.printStackTrace();
            }
            return false;

        }
            @Override
        protected void onPostExecute(Boolean th){

            if(th == true){


                nDialog.dismiss();
/*


                mMap.addMarker(new MarkerOptions()
                        .position(new LatLng(lat, lang))
                        .title(bus.getText().toString())
                        .snippet(time));
                LatLng b = new LatLng(lat, lang);
                mMap.moveCamera(CameraUpdateFactory.newLatLng(b));

*/
                for(int i=0;i<l.length();i++) {
                    JSONObject temp = null;
                    try {
                        temp = l.getJSONObject(i);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    try {
                        mMap.addMarker(new MarkerOptions()
                                .position(new LatLng(new Double(temp.getString("lat")), new Double(temp.getString("long"))))
                                .title(temp.getString("topic"))
                                .snippet(temp.getString("uname")));
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }

                for(int i=0;i<j.length();i++) {
                    JSONObject temp = null;
                    try {
                        temp = l.getJSONObject(i);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    try {
                        mMap.addMarker(new MarkerOptions()
                                .position(new LatLng(new Double(temp.getString("lat")), new Double(temp.getString("long"))))
                                .title(temp.getString("topic"))
                                .snippet(temp.getString("uname")));
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
                LatLng b = new LatLng(10.0, 10.0);
                mMap.moveCamera(CameraUpdateFactory.newLatLng(b));



            }
            else{
                nDialog.dismiss();
                //  temp.setText("");
                Toast.makeText(MapsActivity.this, "No Data Found", Toast.LENGTH_LONG);

            }
        }
    }

}
